NOTE: To get λ , type SHIFT + CTRL + u followed by 03bb
NOTE: To get ⊥ , type SHIFT + CTRL + u followed by 022a5



##################################
# page 1064: Exercise
#            BeKind
# 
# 


##################################
# page 1076: Exercise
#            Lookups
# 
# see ./Lookups.hs
#



##################################
# page 1079: Exercise
#            Identity Instance
# 
# see ./IdentityInstance.hs
#



##################################
# page 1082: Exercise
#            Constant Instance
# 
# see ./ConstantInstance.hs
#



##################################
# page 1105: Exercise
#            Fixer Upper
# 
# see ./FixerUpper.hs
#



##################################
# page 1125: Exercise
#            List Applicative Exercise
# 
# see ./ListApplicative.hs
#



##################################
# page 1127: Exercise
#            ZipList Applicative Exercise
# 
# see ./ZipListApplicative.hs
#



##################################
# page 1134: Exercise
#            VariationsEither
# 
# see ./VariationsOnEither.hs
#


##################################
# page 1135: Chapter Exercises
#            Specialize Methods
# 
-- Given a type that has an instance of Applicative, specialize the types of the methods. Test your specialization in the REPL. One way to do this is to bind aliases of the typeclass methods to more concrete types that have the type we told you to fill in.


-- 1. -- Type
-- []
-- -- Methods
-- pure :: a -> ? a
-- (<*>) :: ? (a -> b) -> ? a -> ? b
pure :: a -> [a]
(<*>) :: [(a -> b)] -> [a] -> [b]

-- 2. -- Type
-- IO
-- -- Methods
-- pure :: a -> ? a
-- (<*>) :: ? (a -> b) -> ? a -> ? b
pure :: a -> IO a
(<*>) :: IO (a, b) -> IO a -> IO b


-- 3. -- Type
-- (,) a
-- -- Methods
-- pure :: a -> ? a
-- (<*>) :: ? (a -> b) -> ? a -> ? b
pure :: a -> (t, a)
(<*>) :: (t, (a -> b)) -> (t, a) -> (t, b)


-- 4. -- Type
-- (->) e
-- -- Methods
-- pure :: a -> ? a
-- (<*>) :: ? (a -> b) -> ? a -> ? b
pure :: a -> (e -> a)
(<*>) :: (e -> (a -> b)) -> (e -> a) -> (e -> b)



##################################
# page 1137: Chapter Exercises
#            Combinations
# 
# see ./Combinations.hs
#


